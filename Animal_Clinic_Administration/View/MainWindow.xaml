<Window x:Class="Animal_Clinic_Administration.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:my="clr-namespace:Animal_Clinic_Administration"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Animal_Clinic_Administration.ViewModels"
        xmlns:viewmodel="clr-namespace:Animal_Clinic_Administration.ViewModels"
         
 
        mc:Ignorable="d"
        
        
         Title="MainWindow"
          
         MinHeight="400" MinWidth="600" Height="500" Width="900" ResizeMode="CanResize">


    <Window.Resources>



        <Style TargetType="FrameworkElement" x:Key="xxxx">
            <Style.Triggers>
                <Trigger Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>


        <BooleanToVisibilityConverter x:Key="BooleanToVis"/>

        <Style TargetType="TextBox" x:Key="TextBoxX">
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="FontSize" Value="9"/>

        </Style>


        <Style TargetType="Image" x:Key="ForSelection">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="SelectionLabel">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="DGHS" TargetType="DataGridColumnHeader">
            <Setter Property="Width" Value="auto"/>
        </Style>


    </Window.Resources>



    <Grid>


        <Grid.Background >

            <ImageBrush ImageSource="vb.jpg" Opacity="0.8"/>



        </Grid.Background>


        <Grid.ColumnDefinitions >
            <ColumnDefinition  />
            <ColumnDefinition  />
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>


        <Grid.RowDefinitions>
            <RowDefinition   Height="0.6*"  />
            <RowDefinition   />
            <RowDefinition   />
            <RowDefinition   />
            <RowDefinition />
        </Grid.RowDefinitions>



        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="1.5*"/>
            </Grid.RowDefinitions>
            <Image Source="v.png" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2" />
        </Grid>



        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2">


            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition />
            </Grid.RowDefinitions>


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.6*"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="0.6*"/>
            </Grid.ColumnDefinitions>

            <Viewbox Grid.Row="2"  Grid.Column="1" >

                <Button x:Name="b1"  FontSize="20"      Content="Registration" Width="135"  Command="{Binding OpenRegistrationMenuCommand}"  >
                    <Button.Background >
                        <SolidColorBrush Color="#50B2C0" Opacity="0.4"/>
                    </Button.Background>


                </Button>


            </Viewbox>

            <!--    <Viewbox Grid.Row="3"   Grid.Column="1" >


              <Button Width="135"  FontSize="20"        Content="Edit"   Command="{Binding OpenProfile}">
                    <Button.Background >
                        <SolidColorBrush Color="#50B2C0" Opacity="0.4"/>
                    </Button.Background>
                </Button>
            </Viewbox>
                -->

        </Grid>



        <Grid Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="2" Grid.RowSpan="2">


            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition />
            </Grid.RowDefinitions>


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.6*"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="0.6*"/>
            </Grid.ColumnDefinitions>


            <!--  <Viewbox Grid.Row="1"   Grid.Column="1">


                <Button  Width="135"   FontSize="20"        Content="Remove"   Command="{Binding OpenProfile}">
                    <Button.Background >
                        <SolidColorBrush Color="#50B2C0" Opacity="0.4"/>
                    </Button.Background>
                </Button>

            </Viewbox> -->

            <Viewbox  Grid.Row="2"  Grid.Column="1"  >


                <Button  Width="135" FontSize="20"    Content="Edit / Delete"     Command="{Binding OpenEditMenuCommand,UpdateSourceTrigger=PropertyChanged}" >
                    <Button.Background >
                        <SolidColorBrush Color="#50B2C0" Opacity="0.4"/>
                    </Button.Background>
                </Button>

            </Viewbox>
        </Grid>






        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Grid.RowSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.20*"/>
                <RowDefinition/>
                <RowDefinition Height="0.1*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition  />
                <ColumnDefinition  />
                <ColumnDefinition  />
                <ColumnDefinition  />
                <ColumnDefinition  />
                <ColumnDefinition  />
            </Grid.ColumnDefinitions>


            <Line Grid.Row="0" Grid.Column="0"  VerticalAlignment="Bottom" Grid.ColumnSpan="6"     X1="0" Y1="0" X2="1366" Y2="0" Stroke="Black" Margin="0,0,-0.4,0"/>



            <Grid Grid.Row="1" Grid.Column="0"  Grid.RowSpan="2" >
                <Grid.RowDefinitions>
                    <RowDefinition  Height="0.8*"/>
                    <RowDefinition Height="0.2*"/>
                    <RowDefinition   Height="0.7*"/>
                    <RowDefinition  Height="0.7*"/>
                    <RowDefinition Height="0.7*"/>
                    <RowDefinition/>
                    <RowDefinition Height="0.7*"/>
                    <RowDefinition/>
                    <RowDefinition Height="0.7*"/>
                    <RowDefinition/>
                    <RowDefinition Height="0.7*"/>
                    <RowDefinition/>
                    <RowDefinition Height="0.7*"/>
                    <RowDefinition />
                    <RowDefinition />


                </Grid.RowDefinitions>



                <Viewbox>
                    <TextBlock Text="Search By" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" />
                </Viewbox>



                <Line Grid.Row="0"   VerticalAlignment="Bottom"      X1="0" Y1="0" X2="272" Y2="0" Stroke="Black"/>


                <Grid Grid.Row="2" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="0.6*"/>
                    </Grid.RowDefinitions>



                    <Image  Style="{StaticResource ForSelection}" Grid.Row="0"  Grid.Column="0"  Source="user (1).png" Stretch="Uniform">
                        <Image.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding SelectedPersonCommand}"/>
                        </Image.InputBindings>
                    </Image>



                    <Viewbox Grid.Row="1" Grid.Column="0" >
                        <Label  Style="{StaticResource SelectionLabel}"   HorizontalAlignment="Center"  Content="Person" VerticalAlignment="Center" FontSize="100" FontWeight="Bold">
                            <Label.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding SelectedPersonCommand}"/>
                            </Label.InputBindings>
                        </Label>
                    </Viewbox>


                    <Image  Style="{StaticResource ForSelection}" Grid.Row="0"  Grid.Column="1"  Source="animals (1).png" Stretch="Uniform">
                        <Image.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding SelectedPetCommand}"/>
                        </Image.InputBindings>
                    </Image>



                    <Viewbox  Grid.Row="1"  Grid.Column="1" >

                        <Label   Style="{StaticResource SelectionLabel}"  Content="Pet" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="100" FontWeight="Bold">
                            <Label.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding SelectedPetCommand }"/>
                            </Label.InputBindings>

                        </Label>
                    </Viewbox>



                    <Line Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="2"  VerticalAlignment="Bottom"      X1="0" Y1="0" X2="500" Y2="0" Stroke="Black"/>

                </Grid>



                <Viewbox  Grid.Row="4"  VerticalAlignment="Bottom" >

                    <Label     FontSize="30"  Content="{Binding R1,Mode=OneWay }"  />

                </Viewbox>


                <Viewbox Grid.Row="5" >

                    <TextBox   Style="{StaticResource TextBoxX}"   Text="{Binding T1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    />

                </Viewbox>


                <Viewbox  Grid.Row="6" VerticalAlignment="Bottom" >

                    <Label  Content="{Binding R2,Mode=OneWay }" FontSize="30"  />
                </Viewbox>

                <Viewbox Grid.Row="7" >

                    <TextBox   Style="{StaticResource TextBoxX}"     Text="{Binding T2,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   />

                </Viewbox>




                <Viewbox  Grid.Row="8"  VerticalAlignment="Bottom" >

                    <Label     FontSize="30"   Content="{Binding R3,Mode=OneWay }"   />

                </Viewbox>


                <Viewbox Grid.Row="9" >

                    <TextBox    Style="{StaticResource TextBoxX}"       Text="{Binding T3,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    />

                </Viewbox>



                <Viewbox  Grid.Row="10"  VerticalAlignment="Bottom" >

                    <Label    FontSize="30"   Content="{Binding R4,Mode=OneWay }"     />

                </Viewbox>


                <Viewbox Grid.Row="11" >

                    <TextBox    Style="{StaticResource TextBoxX}"    Text="{Binding T4,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  />

                </Viewbox>



                <Viewbox  Grid.Row="12"  VerticalAlignment="Bottom" >

                    <Label   FontSize="30"   Content="{Binding R5,Mode=OneWay }"  Visibility="{Binding Path=SelectedMethod, Converter={StaticResource BooleanToVis}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  />

                </Viewbox>


                <Viewbox Grid.Row="13" >

                    <TextBox    Style="{StaticResource TextBoxX}"        Text="{Binding T5,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Path=SelectedMethod, Converter={StaticResource BooleanToVis}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" />

                </Viewbox>








                <Button  Grid.Row="14" Grid.Column="1" Content="Search"   Command="{Binding OpenSearchMenuCommand}" >
                    <Button.Background >
                        <SolidColorBrush Color="#50B2C0" Opacity="0.4"/>
                    </Button.Background>
                </Button>


            </Grid>




            <DataGrid    Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="6"     FontSize="14"   Style="{StaticResource xxxx}"
                         
                         ItemsSource="{Binding PetCollection,UpdateSourceTrigger=PropertyChanged}" CanUserSortColumns="False" CanUserAddRows="False" IsReadOnly="True"
                         
                         SelectedItem="{Binding SelectedPet,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"     AutoGenerateColumns="False"  
                         
                         Visibility="{Binding DataGrid0Vis,Converter={StaticResource BooleanToVis},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   Grid.RowSpan="2">



                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged" >
                        <i:InvokeCommandAction Command="{Binding SelectionChange}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>


                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>


                <DataGrid.CellStyle>



                    <Style TargetType="DataGridCell">

                        <Setter Property="ToolTip" Value="Select For View" />
                        <Setter Property="Width" Value="auto"/>

                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns >

                    <DataGridTextColumn  Header="Name"    Width="130"   Binding="{Binding Name}"/>

                    <DataGridTextColumn Header="Type"   Width="270"     Binding="{Binding Type}"/>

                    <DataGridTextColumn Header="Birth"     Width="150"      Binding="{Binding Birth}"/>

                    <DataGridTextColumn Header="Passport"   Width="150"      Binding="{Binding PassportNumber}"/>

                </DataGrid.Columns>



            </DataGrid>







            <DataGrid   Grid.Row="1" Grid.ColumnSpan="6"  Grid.Column="1"  FontSize="14"  Style="{StaticResource xxxx}"
                         ItemsSource="{Binding PersonCollection,UpdateSourceTrigger=PropertyChanged}"
                         CanUserSortColumns="False" IsReadOnly="True" SelectedItem="{Binding SelectedPerson,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                         Visibility="{Binding DataGrid1Vis,Converter={StaticResource BooleanToVis},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   AutoGenerateColumns="False"  Grid.RowSpan="2"    >


                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged" >
                        <i:InvokeCommandAction Command="{Binding SelectionChange}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>


                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#50B2C0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>


                <DataGrid.CellStyle>

                    <Style TargetType="DataGridCell">

                        <Setter Property="ToolTip" Value="Select For View" />
                        <Setter Property="Width" Value="auto"/>

                    </Style>
                </DataGrid.CellStyle>


                <DataGrid.Columns   >

                    <DataGridTextColumn  Header="First Name"   Width="130"    Binding="{Binding FirstName}">

                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Last Name"   Width="130"     Binding="{Binding LastName}"/>

                    <DataGridTextColumn Header="Age"          Width="50"      Binding="{Binding Age}"/>

                    <DataGridTextColumn Header="Phone"    Width="170"      Binding="{Binding Phone}"/>

                    <DataGridTextColumn Header="E-Mail"    Width="260"      Binding="{Binding Mail}"/>

                </DataGrid.Columns>




            </DataGrid>












            <ContentControl       Grid.Row="1" Grid.Column="1"  Grid.ColumnSpan="6"   Content="{Binding EditViewModel}"     Style="{StaticResource xxxx}"
                                  Visibility="{Binding Path=ProfileVis,Converter={StaticResource BooleanToVis}}"   Grid.RowSpan="2"/>



            <ContentControl       Grid.Row="1"  Grid.ColumnSpan="6"  Grid.Column="1"   Content="{Binding AddViewModel}"   Style="{StaticResource xxxx}"
                                  Visibility="{Binding S_RegisterVis,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BooleanToVis}}"    Grid.RowSpan="2"/>



        </Grid>










    </Grid>





</Window>
